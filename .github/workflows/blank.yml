# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      - uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.MY_PAT }}
          script: |
            const { data: labels } = await github.issues.listLabelsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
      
            // Check if the label already exists
            const existingLabel = labels.find(label => label.name === 'EB');
      
            // If the label doesn't exist, create it
            if (!existingLabel) {
              await github.issues.createLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: 'EB',
                color: '00eb00' // specify the color here in hexadecimal format
              });
            } else {
              // If the label exists, update its color
              await github.issues.updateLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                current_name: 'EB',
                name: 'EB',
                color: '00eb00' // specify the color here in hexadecimal format
              });
            }

